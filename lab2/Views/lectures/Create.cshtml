@model lab2.Models.lecture

@{
    ViewBag.Title = "Create";
}

<h2 class="pt-2">Paskaitos pridėjimas</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ModuleID, "Pasirinkite modulį", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ModuleID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.module.ModuleTitle, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LectureTitle, "Paskaita", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LectureTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LectureTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LectureActivity, "Paskaitos veikla/užduotis", htmlAttributes: new { @class = "control-label col-md" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LectureActivity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LectureActivity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
            <button type="submit" class="btn btn-primary">Pridėti paskaitą</button>
    </div>
</div>
}
<hr />
<div>
    @Html.ActionLink("Grįžti atgal", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
